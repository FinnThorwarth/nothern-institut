/**
 * This code is feasable for production, and renders an image with LazyBones.
 *
 * To better learn Neos take a look at WG.Site:Content.BasicImage,
 * which renders our images as an img tag.
 */
prototype(WG.Site:Content.ImageHeader) < prototype(Neos.Neos:ContentComponent) {

    # if the current node has previous siblings it is not the
	# first content and should be loaded lazy otherwise not
	lazy = ${q(node).prev().is()}

    src = Neos.Fusion:Case {
        image {
            condition = ${q(node).property('image') ? true : false}
            renderer = Sitegeist.Kaleidoscope:AssetImageSource {
                asset = ${q(node).property('image')}
            }
        }
        dummyImage {
            condition = ${site.context.inBackend}
            renderer = Sitegeist.Kaleidoscope:DummyImageSource
            baseWidth = 600
            baseHeight = 250
        }
    }
    alternativeText = ${q(node).property('alternativeText')}

    renderer = afx`
        <Sitegeist.Lazybones:Picture
            class="container-image header-image"
            lazy={true}
            lazyWidth={200}
            imageSource={props.src}
            srcset="320w, 400w, 480w, 600w, 768w, 800w, 960w, 1024px, 1280w, 1440w, 1680w, 1920w"
            sizes={props.sizes}
            alt={props.alternativeText}
            formats="webp, jpeg"
            />
	`
}
